#!/bin/bash
dirName="~/mic-meter/core/latency/"
fName="ins_lat.dat"
insSet=("vexp223ps" "vrcp23ps" "vrsqrt23ps" "vlog2ps" "vaddnpd" "vfmadd213pd" "vcvtps2pd") 
parSet=("vexp223ps" "vrcp23ps" "vrsqrt23ps" "vlog2ps" "vaddnpd" "vfmadd213pd" "vaddnpd")
insOpr=(2 2 2 2 3 3 4)
template="template.c"
driver="lat.c"

counter=0
# remove data file
if [ -f "${fName}" ]
then
	rm ${fName}
fi
ssh mic0 "cd ${dirName}; rm ${fName}"

# loop over different instructions
for ins in ${insSet[@]}; do	
	# generate
	if [ -f "${driver}" ]
	then
		rm ${driver}
	fi
	name=${ins}
	cat ${template} | sed "s/@name/${name}/g" > ./tmp
	
	pair=""
	ins1=""
	ins2=""
	case ${insOpr[${counter}]} in
	2)
		ins1="\"${ins} zmm0, zmm1\\\n\""
		ins2="\"${ins} zmm1, zmm0\\\n\""
		pair="${ins1} ${ins2}"
		;;
	3)
		ins1="\"${ins} zmm0, zmm1, zmm2\\\n\""
		ins2="\"${ins} zmm2, zmm0, zmm1\\\n\""
		pair="${ins1} ${ins2}"
		;;
	4)	# to measure the convert instruction
		ins1="\"${ins} zmm0, zmm1\\\n\""
		ins2="\"${parSet[${counter}]} zmm1, zmm0, zmm2\\\n\""
		pair="${ins1} ${ins2}"		
		;;
	*)
		;;
	esac
	cat ./tmp | sed "s/@pair/${pair}/g" > ${driver}	

	# compile
	make clean; make 

	# transfer
	ssh mic0 "mkdir mic-meter; mkdir mic-meter/core; mkdir mic-meter/core/latency"
	scp * mic0:${dirName}/
 
	# run
	ssh mic0 "cd ${dirName}; ./lat >> ${fName}"	

	# increase the counter	
	counter=$((${counter}+1))
done

# download data
scp mic0:${dirName}/${fName} .


